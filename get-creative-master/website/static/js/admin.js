// Generated by CoffeeScript 1.4.0
(function() {
  var _ban_user, _delete_challenge, _edit_challenge_prompt, _force_challenge_post, _get_list_index, _nodes, _original_prompt_text, _remove_from_hopper, _remove_response, _unban_user;

  _edit_challenge_prompt = function(id, new_prompt) {
    return $.ajax({
      url: "/admin/api/rename",
      type: "POST",
      data: {
        id: id,
        prompt: new_prompt
      },
      success: function() {
        return document.location.reload();
      },
      error: function(req, status, err) {
        return alert("Something went wrong with prompt edit:\n" + status + ": " + err);
      }
    });
  };

  _delete_challenge = function(id) {
    return $.ajax({
      url: "/admin/api/remove_challenge",
      type: "POST",
      data: {
        id: id
      },
      success: function() {
        return document.location.href = "/admin";
      },
      error: function(req, status, err) {
        return alert("Something went wrong with challenge removal:\n" + status + ": " + err);
      }
    });
  };

  _remove_response = function(id) {
    return $.ajax({
      url: "/admin/api/remove_response",
      type: "POST",
      data: {
        id: id
      },
      success: function() {
        return document.location.reload();
      },
      error: function(req, status, err) {
        return alert("Something went wrong with comment removal:\n" + status + ":" + err);
      }
    });
  };

  _remove_from_hopper = function(index) {
    return $.ajax({
      url: "/admin/api/remove_prompt",
      type: "POST",
      data: {
        index: index
      },
      success: function() {
        return document.location.reload();
      },
      error: function(req, status, err) {
        return alert("Something went wrong with challenge removal:\n" + status + ": " + err);
      }
    });
  };

  _force_challenge_post = function() {
    return $.ajax({
      url: "/admin/api/force_post",
      type: "POST",
      success: function() {
        return document.location.reload();
      },
      error: function(req, status, err) {
        return alert("Something went wrong forcing prompt post:\n" + status + ": " + err);
      }
    });
  };

  _ban_user = function(user_id) {
    return $.ajax({
      url: "/admin/api/ban_user",
      type: "POST",
      data: {
        user_id: user_id
      },
      success: function() {
        return document.location.reload();
      },
      error: function(req, status, err) {
        return alert("Something went wrong banning:\n" + status + ": " + err);
      }
    });
  };

  _unban_user = function(user_id) {
    return $.ajax({
      url: "/admin/api/unban_user",
      type: "POST",
      data: {
        user_id: user_id
      },
      success: function() {
        return document.location.reload();
      },
      error: function(req, status, err) {
        return alert("Something went wrong UN-banning:\n" + status + ": " + err);
      }
    });
  };

  _get_list_index = function(item, list) {
    var reverse_index;
    reverse_index = list.index(item);
    return list.length - 1 - reverse_index;
  };

  _nodes = {
    type_dropdown: $('select.challenge_type'),
    new_challenge_forms: $('form.new_challenge'),
    challenge_prompt: $('.challenge p.challenge_prompt'),
    new_challenge_input: $('input[type=text].prompt'),
    edit_challenge_button: $('#js_edit_button'),
    delete_challenge_button: $('#js_delete_button'),
    new_challenge_button: $('#js_new_button'),
    force_post_button: $('#js_force_post'),
    remove_response_buttons: $('.response .remove'),
    remove_hopper_buttons: $('.hopper .remove'),
    select_all: $('.select_all'),
    logo: $('.logo a'),
    ban_user: $('button.ban_user'),
    unban_user: $('button.unban_user')
  };

  _original_prompt_text = _nodes.challenge_prompt.text();

  _nodes.edit_challenge_button.on("click", function() {
    if (confirm("Update the prompt text?")) {
      return _edit_challenge_prompt(window.current_id, _nodes.challenge_prompt.text());
    } else {
      return _nodes.challenge_prompt.text(_original_prompt_text);
    }
  });

  _nodes.delete_challenge_button.on("click", function() {
    if (confirm("Really delete the entire challenge and all responses?")) {
      return _delete_challenge(window.current_id);
    }
  });

  _nodes.remove_response_buttons.on("click", function() {
    if (confirm("Delete this response?")) {
      return _remove_response($(this).closest(".response").data("id"));
    }
  });

  _nodes.remove_hopper_buttons.on("click", function() {
    if (confirm("Remove this challenge from the hopper?")) {
      return _remove_from_hopper(_get_list_index(this, _nodes.remove_hopper_buttons));
    }
  });

  _nodes.force_post_button.on("click", function() {
    if (confirm("Are you sure you want to send this challenge to everyone?")) {
      return _force_challenge_post();
    }
  });

  _nodes.logo.on("click", function() {
    return document.location.href = "/admin/new";
  });

  _nodes.ban_user.on("click", function() {
    var user_id;
    if (confirm("Are you sure you want to BAN this user?!")) {
      user_id = $(this).data("id");
      return _ban_user(user_id);
    }
  });

  _nodes.unban_user.on("click", function() {
    var user_id;
    if (confirm("Are you sure you want to UNban this user?")) {
      user_id = $(this).data("id");
      return _unban_user(user_id);
    }
  });

  _nodes.type_dropdown.on("change", function() {
    var value;
    value = $(this).val();
    _nodes.new_challenge_forms.hide();
    return _nodes.new_challenge_forms.closest("." + value).show();
  });

  _nodes.select_all.on("focus", function() {
    var target;
    target = this;
    return setTimeout(function() {
      var range, sel;
      if (window.getSelection && document.createRange) {
        range = document.createRange();
        range.selectNodeContents(target);
        sel = window.getSelection();
        sel.removeAllRanges();
        return sel.addRange(range);
      } else if (document.body.createTextRange) {
        range = document.body.createTextRange();
        range.moveToElementText(target);
        return range.select();
      }
    }, 1);
  });

  window.new_challenge = function(target) {
    var text;
    text = $(target).find('p.challenge_prompt').text();
    _nodes.new_challenge_input.val(text);
    return true;
  };

  window.IS_ADMIN = true;

}).call(this);
